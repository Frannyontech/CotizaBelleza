name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cotizabelleza_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run backend tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/cotizabelleza_test
        DJANGO_SETTINGS_MODULE: cotizabelleza.settings
        CELERY_TASK_ALWAYS_EAGER: True
        CELERY_TASK_EAGER_PROPAGATES: True
        EMAIL_BACKEND: django.core.mail.backends.locmem.EmailBackend
      run: |
        python manage.py migrate
        pytest --cov=. --cov-report=xml --cov-report=html:htmlcov --cov-fail-under=80
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: cotizabelleza-frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./cotizabelleza-frontend
      run: npm ci
    
    - name: Run frontend tests
      working-directory: ./cotizabelleza-frontend
      run: npm run test:coverage -- --coverageReporters=lcov --coverageReporters=text --coverageReporters=html
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./cotizabelleza-frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cotizabelleza_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: cotizabelleza-frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        cd cotizabelleza-frontend && npm ci
    
    - name: Run integration tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/cotizabelleza_test
        DJANGO_SETTINGS_MODULE: cotizabelleza.settings
        CELERY_TASK_ALWAYS_EAGER: True
        CELERY_TASK_EAGER_PROPAGATES: True
        EMAIL_BACKEND: django.core.mail.backends.locmem.EmailBackend
      run: |
        python manage.py migrate
        pytest -m integration --cov=. --cov-report=xml --cov-append
        cd cotizabelleza-frontend && npm run test:integration
    
    - name: Upload integration coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration
        name: integration-coverage

  security-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install bandit safety
    
    - name: Run security checks
      run: |
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  linting:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: cotizabelleza-frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        pip install flake8 black isort
        cd cotizabelleza-frontend && npm ci
    
    - name: Run Python linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        black --check .
        isort --check-only --diff .
    
    - name: Run JavaScript linting
      working-directory: ./cotizabelleza-frontend
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, integration-tests, security-tests, linting]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: cotizabelleza-frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        cd cotizabelleza-frontend && npm ci
    
    - name: Build frontend
      working-directory: ./cotizabelleza-frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          cotizabelleza-frontend/dist/
          requirements.txt
          manage.py
          core/
          cotizabelleza/
          etl/
          processor/
          scraper/
          utils/
          templates/
          static/
