# Generated by Django 5.2.4 on 2025-08-19 17:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_resena_nombre_autor'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='alertausuario',
            name='alerta',
        ),
        migrations.AlterUniqueTogether(
            name='alertausuario',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='alertausuario',
            name='producto',
        ),
        migrations.RemoveField(
            model_name='alertausuario',
            name='usuario',
        ),
        migrations.AlterUniqueTogether(
            name='productotienda',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='productotienda',
            name='producto',
        ),
        migrations.RemoveField(
            model_name='productotienda',
            name='tienda',
        ),
        migrations.CreateModel(
            name='AlertaPrecioUnificada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producto_id', models.CharField(db_index=True, max_length=50)),
                ('producto_nombre', models.CharField(max_length=500)),
                ('producto_marca', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('precio_objetivo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_ultima_notificacion', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Alerta de Precio Unificada',
                'verbose_name_plural': 'Alertas de Precios Unificadas',
                'ordering': ['-fecha_creacion'],
                'unique_together': {('producto_id', 'email')},
            },
        ),
        migrations.CreateModel(
            name='ProductoPersistente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('nombre_normalizado', models.CharField(db_index=True, max_length=500)),
                ('marca', models.CharField(db_index=True, max_length=200)),
                ('categoria', models.CharField(db_index=True, max_length=100)),
                ('hash_unico', models.CharField(db_index=True, max_length=64, unique=True)),
                ('nombre_original', models.CharField(max_length=500)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('imagen_url', models.URLField(blank=True, max_length=500, null=True)),
                ('primera_aparicion', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('activo', models.BooleanField(default=True)),
                ('veces_encontrado', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Producto Persistente',
                'verbose_name_plural': 'Productos Persistentes',
                'ordering': ['-ultima_actualizacion'],
                'indexes': [models.Index(fields=['internal_id'], name='core_produc_interna_75a9ea_idx'), models.Index(fields=['hash_unico'], name='core_produc_hash_un_2fc9c6_idx'), models.Index(fields=['marca', 'categoria'], name='core_produc_marca_9c314c_idx'), models.Index(fields=['nombre_normalizado'], name='core_produc_nombre__893b29_idx')],
            },
        ),
        migrations.CreateModel(
            name='PrecioHistorico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tienda', models.CharField(db_index=True, max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_original', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tiene_descuento', models.BooleanField(default=False)),
                ('stock', models.BooleanField(default=True)),
                ('disponible', models.BooleanField(default=True)),
                ('url_producto', models.URLField(blank=True, max_length=500, null=True)),
                ('imagen_url', models.URLField(blank=True, max_length=500, null=True)),
                ('fecha_extraccion', models.DateTimeField(auto_now_add=True)),
                ('fecha_scraping', models.DateTimeField()),
                ('fuente_scraping', models.CharField(max_length=100)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='precios_historicos', to='core.productopersistente')),
            ],
            options={
                'verbose_name': 'Precio Histórico',
                'verbose_name_plural': 'Precios Históricos',
                'ordering': ['-fecha_extraccion'],
            },
        ),
        migrations.CreateModel(
            name='EstadisticaProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_min_actual', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('precio_max_actual', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('precio_promedio', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('num_tiendas_disponible', models.PositiveIntegerField(default=0)),
                ('tiendas_con_stock', models.PositiveIntegerField(default=0)),
                ('num_resenas', models.PositiveIntegerField(default=0)),
                ('valoracion_promedio', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
                ('num_alertas_activas', models.PositiveIntegerField(default=0)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('producto', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estadisticas', to='core.productopersistente')),
            ],
            options={
                'verbose_name': 'Estadística de Producto',
                'verbose_name_plural': 'Estadísticas de Productos',
            },
        ),
        migrations.CreateModel(
            name='AlertaPrecioProductoPersistente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255)),
                ('precio_objetivo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tienda_especifica', models.CharField(blank=True, max_length=100, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_ultima_notificacion', models.DateTimeField(blank=True, null=True)),
                ('frecuencia_max_horas', models.PositiveIntegerField(default=24)),
                ('notificaciones_enviadas', models.PositiveIntegerField(default=0)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas_precio', to='core.productopersistente')),
            ],
            options={
                'verbose_name': 'Alerta de Precio Persistente',
                'verbose_name_plural': 'Alertas de Precios Persistentes',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ResenaProductoPersistente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valoracion', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario', models.TextField()),
                ('nombre_autor', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('verificada', models.BooleanField(default=False)),
                ('activa', models.BooleanField(default=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='core.productopersistente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas_productos_persistentes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reseña de Producto Persistente',
                'verbose_name_plural': 'Reseñas de Productos Persistentes',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ResenaUnificada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producto_id', models.CharField(db_index=True, max_length=50)),
                ('producto_nombre', models.CharField(max_length=500)),
                ('producto_marca', models.CharField(blank=True, max_length=200, null=True)),
                ('producto_categoria', models.CharField(blank=True, max_length=100, null=True)),
                ('valoracion', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario', models.TextField()),
                ('nombre_autor', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas_unificadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reseña Unificada',
                'verbose_name_plural': 'Reseñas Unificadas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.DeleteModel(
            name='Alerta',
        ),
        migrations.DeleteModel(
            name='AlertaUsuario',
        ),
        migrations.DeleteModel(
            name='ProductoTienda',
        ),
        migrations.AddIndex(
            model_name='preciohistorico',
            index=models.Index(fields=['producto', '-fecha_extraccion'], name='core_precio_product_8f32d0_idx'),
        ),
        migrations.AddIndex(
            model_name='preciohistorico',
            index=models.Index(fields=['tienda', '-fecha_extraccion'], name='core_precio_tienda_c13020_idx'),
        ),
        migrations.AddIndex(
            model_name='preciohistorico',
            index=models.Index(fields=['fecha_scraping'], name='core_precio_fecha_s_883c09_idx'),
        ),
        migrations.AddIndex(
            model_name='preciohistorico',
            index=models.Index(fields=['stock', 'disponible'], name='core_precio_stock_ff4bed_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='preciohistorico',
            unique_together={('producto', 'tienda', 'fecha_scraping')},
        ),
        migrations.AddIndex(
            model_name='alertaprecioproductopersistente',
            index=models.Index(fields=['activa', 'fecha_ultima_notificacion'], name='core_alerta_activa_5719d9_idx'),
        ),
        migrations.AddIndex(
            model_name='alertaprecioproductopersistente',
            index=models.Index(fields=['producto', 'activa'], name='core_alerta_product_b1bdf0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='alertaprecioproductopersistente',
            unique_together={('producto', 'email')},
        ),
        migrations.AddIndex(
            model_name='resenaproductopersistente',
            index=models.Index(fields=['producto', '-fecha_creacion'], name='core_resena_product_494d12_idx'),
        ),
        migrations.AddIndex(
            model_name='resenaproductopersistente',
            index=models.Index(fields=['valoracion'], name='core_resena_valorac_d61220_idx'),
        ),
        migrations.AddIndex(
            model_name='resenaproductopersistente',
            index=models.Index(fields=['verificada', 'activa'], name='core_resena_verific_ffe697_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resenaproductopersistente',
            unique_together={('producto', 'usuario')},
        ),
        migrations.AddIndex(
            model_name='resenaunificada',
            index=models.Index(fields=['producto_id', '-fecha_creacion'], name='core_resena_product_52db2b_idx'),
        ),
        migrations.AddIndex(
            model_name='resenaunificada',
            index=models.Index(fields=['valoracion'], name='core_resena_valorac_0fbee2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resenaunificada',
            unique_together={('producto_id', 'usuario')},
        ),
    ]
